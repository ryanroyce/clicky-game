{"ast":null,"code":"import _classCallCheck from \"/Users/ryanminor/NU/clicky-game/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/ryanminor/NU/clicky-game/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/ryanminor/NU/clicky-game/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/ryanminor/NU/clicky-game/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/ryanminor/NU/clicky-game/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/ryanminor/NU/clicky-game/client/src/App.js\";\nimport React, { Component } from \"react\";\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport friends from \"./friends.json\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      friends: friends,\n      score: 0,\n      topscore: 0\n    };\n\n    _this.selectFriend = function (id) {\n      _this.state.friends.find(function (a, b) {\n        if (a.id === id) {\n          // if the clicked property is false do this (which they are all false by default)\n          if (friends[b].clicked === false) {\n            // change clicked property to true\n            friends[b].clicked = true;\n\n            _this.setState({\n              friends: friends,\n              score: _this.state.score + 1\n            }); // sort friends in a new random order\n\n\n            friends.sort(function () {\n              return Math.random() - 0.5;\n            });\n            return true;\n          } else {\n            // else call the restart function that will restart the game as well as score\n            _this.restart();\n          }\n        }\n      });\n    };\n\n    _this.restart = function () {\n      if (_this.state.score > _this.state.topscore) {\n        _this.setState({\n          topscore: _this.state.score\n        });\n\n        _this.state.friends.forEach(function (friend) {\n          friend.clicked = false;\n        });\n\n        alert(\"You lose, try again to beat your high score!\");\n\n        _this.setState({\n          score: 0\n        });\n\n        return true;\n      }\n\n      ;\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    // // remove friend will add 1 to the score and randomize the order of the pictures\n    // selectFriend = id => {\n    //   // takes the friends array and sorts the pictures into a random order\n    //   friends.sort(() => Math.random() - .5);\n    //   this.setState({ friends, score: this.state.score +1 });\n    // };\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(Wrapper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"React Memory Game\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }), \"Score: \", this.state.score, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }), \"High Score: \", this.state.topscore), this.state.friends.map(function (friend) {\n        return React.createElement(FriendCard, {\n          selectFriend: _this2.selectFriend,\n          id: friend.id,\n          key: friend.id,\n          name: friend.name,\n          image: friend.image,\n          occupation: friend.occupation,\n          location: friend.location,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        });\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\n;\nexport default App;","map":{"version":3,"sources":["/Users/ryanminor/NU/clicky-game/client/src/App.js"],"names":["React","Component","FriendCard","Wrapper","Title","friends","App","state","score","topscore","selectFriend","id","find","a","b","clicked","setState","sort","Math","random","restart","forEach","friend","alert","map","name","image","occupation","location"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,OAAP,MAAoB,gBAApB;;IAEMC,G;;;;;;;;;;;;;;;;;UAEJC,K,GAAQ;AACNF,MAAAA,OAAO,EAAPA,OADM;AAENG,MAAAA,KAAK,EAAE,CAFD;AAGNC,MAAAA,QAAQ,EAAE;AAHJ,K;;UAORC,Y,GAAe,UAAAC,EAAE,EAAI;AACnB,YAAKJ,KAAL,CAAWF,OAAX,CAAmBO,IAAnB,CAAwB,UAACC,CAAD,EAAIC,CAAJ,EAAU;AAChC,YAAID,CAAC,CAACF,EAAF,KAASA,EAAb,EAAiB;AACf;AACA,cAAIN,OAAO,CAACS,CAAD,CAAP,CAAWC,OAAX,KAAuB,KAA3B,EAAkC;AAChC;AACAV,YAAAA,OAAO,CAACS,CAAD,CAAP,CAAWC,OAAX,GAAqB,IAArB;;AACA,kBAAKC,QAAL,CAAc;AAAEX,cAAAA,OAAO,EAAPA,OAAF;AAAWG,cAAAA,KAAK,EAAE,MAAKD,KAAL,CAAWC,KAAX,GAAmB;AAArC,aAAd,EAHgC,CAIhC;;;AACAH,YAAAA,OAAO,CAACY,IAAR,CAAa;AAAA,qBAAMC,IAAI,CAACC,MAAL,KAAgB,GAAtB;AAAA,aAAb;AACA,mBAAO,IAAP;AACD,WAPD,MAQK;AACH;AACA,kBAAKC,OAAL;AACD;AACF;AACF,OAhBD;AAiBD,K;;UAEDA,O,GAAU,YAAM;AACd,UAAI,MAAKb,KAAL,CAAWC,KAAX,GAAmB,MAAKD,KAAL,CAAWE,QAAlC,EAA4C;AAC1C,cAAKO,QAAL,CAAc;AAAEP,UAAAA,QAAQ,EAAE,MAAKF,KAAL,CAAWC;AAAvB,SAAd;;AACA,cAAKD,KAAL,CAAWF,OAAX,CAAmBgB,OAAnB,CAA2B,UAAAC,MAAM,EAAI;AACnCA,UAAAA,MAAM,CAACP,OAAP,GAAiB,KAAjB;AACD,SAFD;;AAGAQ,QAAAA,KAAK,CAAC,8CAAD,CAAL;;AACA,cAAKP,QAAL,CAAc;AAAER,UAAAA,KAAK,EAAE;AAAT,SAAd;;AACA,eAAO,IAAP;AACD;;AAAA;AACF,K;;;;;;;AAID;AACA;AACA;AACA;AAEA;AACA;6BAES;AAAA;;AACP,aACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,aAEU,KAAKD,KAAL,CAAWC,KAFrB,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,kBAIe,KAAKD,KAAL,CAAWE,QAJ1B,CADF,EAOG,KAAKF,KAAL,CAAWF,OAAX,CAAmBmB,GAAnB,CAAuB,UAAAF,MAAM;AAAA,eAC5B,oBAAC,UAAD;AACE,UAAA,YAAY,EAAE,MAAI,CAACZ,YADrB;AAEE,UAAA,EAAE,EAAEY,MAAM,CAACX,EAFb;AAGE,UAAA,GAAG,EAAEW,MAAM,CAACX,EAHd;AAIE,UAAA,IAAI,EAAEW,MAAM,CAACG,IAJf;AAKE,UAAA,KAAK,EAAEH,MAAM,CAACI,KALhB;AAME,UAAA,UAAU,EAAEJ,MAAM,CAACK,UANrB;AAOE,UAAA,QAAQ,EAAEL,MAAM,CAACM,QAPnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAD4B;AAAA,OAA7B,CAPH,CADF;AAqBD;;;;EAzEe3B,S;;AA0EjB;AAED,eAAeK,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport friends from \"./friends.json\";\n\nclass App extends Component {\n  // Setting the variables in our state\n  state = {\n    friends,\n    score: 0,\n    topscore: 0,\n  };\n\n  // using the template from the \n  selectFriend = id => {\n    this.state.friends.find((a, b) => {\n      if (a.id === id) {\n        // if the clicked property is false do this (which they are all false by default)\n        if (friends[b].clicked === false) {\n          // change clicked property to true\n          friends[b].clicked = true;\n          this.setState({ friends, score: this.state.score + 1 });\n          // sort friends in a new random order\n          friends.sort(() => Math.random() - 0.5);\n          return true;\n        }\n        else {\n          // else call the restart function that will restart the game as well as score\n          this.restart();\n        }\n      }\n    })\n  };\n\n  restart = () => {\n    if (this.state.score > this.state.topscore) {\n      this.setState({ topscore: this.state.score });\n      this.state.friends.forEach(friend => {\n        friend.clicked = false;\n      });\n      alert(\"You lose, try again to beat your high score!\");\n      this.setState({ score: 0 });\n      return true;\n    };\n  };\n\n\n\n  // // remove friend will add 1 to the score and randomize the order of the pictures\n  // selectFriend = id => {\n  //   // takes the friends array and sorts the pictures into a random order\n  //   friends.sort(() => Math.random() - .5);\n\n  //   this.setState({ friends, score: this.state.score +1 });\n  // };\n\n  render() {\n    return (\n      <Wrapper>\n        <Title>React Memory Game\n          <br></br>\n          Score: {this.state.score}\n          <br></br>\n          High Score: {this.state.topscore}\n        </Title>\n        {this.state.friends.map(friend => (\n          <FriendCard\n            selectFriend={this.selectFriend}\n            id={friend.id}\n            key={friend.id}\n            name={friend.name}\n            image={friend.image}\n            occupation={friend.occupation}\n            location={friend.location}\n          />\n        ))}\n      </Wrapper>\n    );\n  }\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}