{"ast":null,"code":"import _classCallCheck from \"/Users/ryanminor/NU/clicky-game/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/ryanminor/NU/clicky-game/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/ryanminor/NU/clicky-game/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/ryanminor/NU/clicky-game/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/ryanminor/NU/clicky-game/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/ryanminor/NU/clicky-game/client/src/App.js\";\nimport React, { Component } from \"react\";\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport friends from \"./friends.json\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      friends: friends,\n      score: 0,\n      topscore: 0\n    };\n\n    _this.restart = function () {\n      if (_this.state.score > _this.state.topscore) {\n        _this.setState({\n          topscore: _this.state.score\n        });\n\n        _this.state.friends.forEach(function (friend) {\n          friend.clicked = 0;\n        });\n\n        alert(\"you lose\");\n\n        _this.setState({\n          score: 0\n        });\n\n        return true;\n      }\n\n      ;\n    };\n\n    _this.removeFriend = function (id) {\n      // Filter this.state.friends for friends with an id not equal to the id being removed\n      // const friends = this.state.friends.filter(friend => friend.id !== id);\n      _this.state.friends.find(function (a, b) {\n        if (a.id === id) {\n          if (friends[b].clicked === false) {\n            //this code iterates through all the friend objects\n            friends[b].clicked = true;\n\n            _this.setState({\n              friends: friends,\n              score: _this.state.score + 1\n            });\n\n            friends.sort(function () {\n              return Math.random() - 0.5;\n            });\n            return true;\n          } else {\n            _this.restart();\n          }\n        }\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    // // remove friend will add 1 to the score and randomize the order of the pictures\n    // removeFriend = id => {\n    //   // takes the friends array and sorts the pictures into a random order\n    //   friends.sort(() => Math.random() - .5);\n    //   this.setState({ friends, score: this.state.score +1 });\n    // };\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(Wrapper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"Friends List\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }), \"Score: \", this.state.score, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }), \"High Score: \", this.state.topscore), this.state.friends.map(function (friend) {\n        return React.createElement(FriendCard, {\n          removeFriend: _this2.removeFriend,\n          id: friend.id,\n          key: friend.id,\n          name: friend.name,\n          image: friend.image,\n          occupation: friend.occupation,\n          location: friend.location,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        });\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/ryanminor/NU/clicky-game/client/src/App.js"],"names":["React","Component","FriendCard","Wrapper","Title","friends","App","state","score","topscore","restart","setState","forEach","friend","clicked","alert","removeFriend","id","find","a","b","sort","Math","random","map","name","image","occupation","location"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,OAAP,MAAoB,gBAApB;;IAEMC,G;;;;;;;;;;;;;;;;;UAEJC,K,GAAQ;AACNF,MAAAA,OAAO,EAAPA,OADM;AAENG,MAAAA,KAAK,EAAC,CAFA;AAGNC,MAAAA,QAAQ,EAAC;AAHH,K;;UAMRC,O,GAAU,YAAM;AACd,UAAI,MAAKH,KAAL,CAAWC,KAAX,GAAmB,MAAKD,KAAL,CAAWE,QAAlC,EAA2C;AACzC,cAAKE,QAAL,CAAc;AAACF,UAAAA,QAAQ,EAAC,MAAKF,KAAL,CAAWC;AAArB,SAAd;;AACF,cAAKD,KAAL,CAAWF,OAAX,CAAmBO,OAAnB,CAA2B,UAAAC,MAAM,EAAI;AACxCA,UAAAA,MAAM,CAACC,OAAP,GAAiB,CAAjB;AAAoB,SADjB;;AAEHC,QAAAA,KAAK,CAAC,UAAD,CAAL;;AACA,cAAKJ,QAAL,CAAc;AAACH,UAAAA,KAAK,EAAC;AAAP,SAAd;;AACA,eAAO,IAAP;AACI;;AAAA;AACF,K;;UAEDQ,Y,GAAe,UAAAC,EAAE,EAAI;AACnB;AACA;AACA,YAAKV,KAAL,CAAWF,OAAX,CAAmBa,IAAnB,CAAwB,UAACC,CAAD,EAAIC,CAAJ,EAAU;AAClC,YAAID,CAAC,CAACF,EAAF,KAASA,EAAb,EAAgB;AACd,cAAIZ,OAAO,CAACe,CAAD,CAAP,CAAWN,OAAX,KAAuB,KAA3B,EAAiC;AACnC;AACIT,YAAAA,OAAO,CAACe,CAAD,CAAP,CAAWN,OAAX,GAAqB,IAArB;;AACA,kBAAKH,QAAL,CAAc;AAAEN,cAAAA,OAAO,EAAPA,OAAF;AAAWG,cAAAA,KAAK,EAAE,MAAKD,KAAL,CAAWC,KAAX,GAAkB;AAApC,aAAd;;AACAH,YAAAA,OAAO,CAACgB,IAAR,CAAa;AAAA,qBAAMC,IAAI,CAACC,MAAL,KAAgB,GAAtB;AAAA,aAAb;AACA,mBAAO,IAAP;AACD,WAND,MAOK;AACH,kBAAKb,OAAL;AACD;AACF;AACF,OAbC;AAcH,K;;;;;;;AAQC;AACA;AACA;AACA;AAEA;AACA;6BAIS;AAAA;;AACP,aACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,aAEW,KAAKH,KAAL,CAAWC,KAFtB,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,kBAIgB,KAAKD,KAAL,CAAWE,QAJ3B,CADF,EAOG,KAAKF,KAAL,CAAWF,OAAX,CAAmBmB,GAAnB,CAAuB,UAAAX,MAAM;AAAA,eAC5B,oBAAC,UAAD;AACE,UAAA,YAAY,EAAE,MAAI,CAACG,YADrB;AAEE,UAAA,EAAE,EAAEH,MAAM,CAACI,EAFb;AAGE,UAAA,GAAG,EAAEJ,MAAM,CAACI,EAHd;AAIE,UAAA,IAAI,EAAEJ,MAAM,CAACY,IAJf;AAKE,UAAA,KAAK,EAAEZ,MAAM,CAACa,KALhB;AAME,UAAA,UAAU,EAAEb,MAAM,CAACc,UANrB;AAOE,UAAA,QAAQ,EAAEd,MAAM,CAACe,QAPnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAD4B;AAAA,OAA7B,CAPH,CADF;AAqBD;;;;EA5Ee3B,S;;AA+ElB,eAAeK,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport friends from \"./friends.json\";\n\nclass App extends Component {\n  // Setting this.state.friends to the friends json array\n  state = {\n    friends,\n    score:0,\n    topscore:0,\n  };\n \n  restart = () => {\n    if (this.state.score > this.state.topscore){\n      this.setState({topscore:this.state.score});\n    this.state.friends.forEach(friend => {\n friend.clicked = 0;});\n alert(\"you lose\");\n this.setState({score:0});\n return true;\n    };\n  };\n \n  removeFriend = id => {\n    // Filter this.state.friends for friends with an id not equal to the id being removed\n    // const friends = this.state.friends.filter(friend => friend.id !== id);\n    this.state.friends.find((a, b) => {\n    if (a.id === id){\n      if (friends[b].clicked === false){\n    //this code iterates through all the friend objects\n        friends[b].clicked = true;\n        this.setState({ friends, score: this.state.score +1 });\n        friends.sort(() => Math.random() - 0.5 );\n        return true;\n      }\n      else {\n        this.restart();\n      }\n    }\n  })\n}\n  \n  \n  \n  \n  \n  \n  \n  // // remove friend will add 1 to the score and randomize the order of the pictures\n  // removeFriend = id => {\n  //   // takes the friends array and sorts the pictures into a random order\n  //   friends.sort(() => Math.random() - .5);\n    \n  //   this.setState({ friends, score: this.state.score +1 });\n  // };\n\n  \n\n  render() {\n    return (\n      <Wrapper>\n        <Title>Friends List\n          <br></br>\n          Score: { this.state.score}\n          <br></br>\n          High Score: { this.state.topscore}\n        </Title>\n        {this.state.friends.map(friend => (\n          <FriendCard\n            removeFriend={this.removeFriend}\n            id={friend.id}\n            key={friend.id}\n            name={friend.name}\n            image={friend.image}\n            occupation={friend.occupation}\n            location={friend.location}\n          />\n        ))}\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}